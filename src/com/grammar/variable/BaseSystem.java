package com.grammar.variable;
/*
3、
    1、关于进制
    所有数字在计算机底层都以二进制形式存在。
    对于整数，有四种表示方式：
    二进制(binary):0,1,满2进1,以0b或0B开头。0b1010
    十进制(decimal):0-9,满10进1。1010
    八进制(octal):0-7,满8进1.以数字0开头表示。01010
    十六进制(hex):0-9及A(10)-F(15),满16进1,以0x或0X开头表示。此处的A-F不区分大小写。 如：0x21AF + 1 = 0X21B0

    2、进制间转化
    进制的基本转换
    十进制 二进制互转
    二进制转成十进制 乘以2的幂数（从最低位[右边]开始，将每个位上的数提取出来，乘以2的[位数-1]次方，然后求和）
    十进制转成二进制 除以2的余数
    二进制 八进制互转
    二进制 十六进制互转
    十进制 八进制互转
    十进制 十六进制互转

    3、二进制
    Java整数类型默认是int类型，当用二进制定义整数时，其第32位是符号位；当是long类型时，二进制默认占64位，第64位是符号位。
    二进制的整数有如下三种形式：
    原码：直接将一个数值换成二进制数。最高位是符号位,0表示正数，-1表示负数。
    负数的反码：是对原码按位取反，只是最高位（符号位）确定为1。(负数的补码-1)
    负数的补码：其反码加1。

    计算机以二进制补码的形式保存所有的整数。
    正数的原码、反码、补码都相同。
    负数的补码是其反码+1。
    0的反码，补码都是0
    java没有无符号数，换言之，java中的数都是有符号的
    当我们看运算结果的时候，要看他的原码

 */
public class BaseSystem {
    public static void main(String[] args) {
//其他进制转十进制
        /*
            二进制转换成十进制实例
        规则：从最低位(右边)开始，将每个位上的数提取出来，乘以2的(位数-1)次方，
        然后求和。
        案例：
        请将0b1011转成十进制的数
        0b1011 = 1 * 2的(1-1)次方 + 1 * 2的(2-1)次方 + 0 * 2的(3-1)次方 + 1 *
        2的(4-1)次方 = 1 + 2 + 0 + 8 = 11


            八进制转换成十进制实例
        规则：从最低位(右边)开始，将每个位上的数提取出来，乘以8的(位数-1)次方，
        然后求和。
        案例：
        请将0234转成十进制的数
        0234 = 4 * 8^0 + 3 * 8^2 = 4 + 24 + 128 = 156


            十六进制转换成十进制实例
        规则：从最低位(右边)开始，将每个位上的数提取出来，乘以16的(位数-1)次方，
        然后求和。
        案例：
        请将0x23A转成十进制的数
        0x23A = 10 * 16^0 + 3 * 16^1 + 2 * 16^2 = 10 + 48 + 512 = 570

        请将下列转化成十进制
        0b110001100 = 1 * 2 ^ 2 + 1 * 2 ^ 3 + 1 * 2 ^ 7 + 1 * 2 ^ 8 = 4 + 8 + 128 + 256 = 396
        02456 = 6 * 8 ^ 0 + 5 * 8 ^ 1 + 4 * 8 ^ 2 + 2 * 8 ^ 3 = 6 + 40 + 256 + 1024 = 1326
        0xA45 = 5 * 16 ^ 0 + 4 * 16 ^ 1 + 10 * 16 ^ 2 = 5 + 64 + 2560 = 2629
        */

        //十进制转其他进制

        /*
            十进制转换成二进制
        规则：将该数不断除以2，直到商为0为止，然后将每步得到的余数倒过来，就
        是对应的二进制。
        案例：
        请将34转成二进制 = 0B00100010

            十进制转换成八进制
        规则：将该数不断除以8，直到商为0为止，然后将每步得到的余数倒过来，就
        是对应的八进制。
        案例：
        请将131转成八进制 = 0203

            十进制转换成十六进制
        规则：将该数不断除以16，直到商为0为止，然后将每步得到的余数倒过来，就
        是对应的十六进制。
        案例：
        请将237转成十六进制 = 0xED

        请将下列十进制转换为其他进制：
        123转成二进制 => 0b01111011
        678转成八进制 => 01246
        8912转成十六进制 => 0x22D0
        */

        //二进制转换成八进制、十六进制

        /*
            二进制转换成八进制
        规则：从低位开始，将二进制数每三位一组，转成对应的八进制数即可。
        案例：
        请将ob11010101转成八进制
        ob11010101 => ob11(3) 010(2) 101(5) => 0325

            二进制转换成十六进制
        规则：从低位开始，将二进制数每四位一组，转成对应的十六进制数即可。
        案例：
        请将0b11010101转成十六进制
        ob11010101 = 0xD5

        请将下列二进制转换成其他进制：
        0b11100101转成八进制 => 0345
        0b1110010110转成十六进制 =>0x396
        */

        //八进制、十六进制转成二进制

        /*
            八进制转换成二进制
        规则：将八进制数每1位，转成对应的一个3位的二进制数即可。
        案例：
        请将0237转成二进制
        0237 = 0b010011111

            十六进制转换成二进制
        规则：将十六进制数每1位，转成对应的一个4位的二进制数即可。
        案例：
        请将023B转成二进制
        0x23B = 0b001000111011

        请将下列进制转成二进制：
        01230转成二进制 => 0b001010011000
        0xAB29转成二进制 => 0b1010101100101001
        */
    }
}
