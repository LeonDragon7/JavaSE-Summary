package com.knighthood;

public class Algorithm {
    /*
        算法优化意义
        1.算法是程序的灵魂，为什么有些程序可以在海量数据计算时，依然保 持高速计算?
        2.编程中算法很多，比如八大排序算法(冒泡、选择、插入、快排、归并. 希尔、基数、堆排序)、查找算法、分治算法、动态规划算法、KMP算法、贪心算法、普里姆算法、克鲁斯卡尔算法、迪杰斯特拉算法、弗洛伊德算法。

        经典算法面试题-骑士周游问题
        马踏棋盘算法介绍
        1.马踏棋盘算法也被称为骑士周游问题
        2.将马随机放在国际象棋的8×8棋盘Board[0 ~7][0~7]的某个方格中，马按走棋规则(马走日字)进行移动。要求每个方格只进入一次，走遍棋盘上全部64个方格。
        3.游戏演示: https://u.ali213.net/games/horsesun/index.html?game_code=403
        4.会使用到图的遍历算法(DFS)+贪心算法优化

        1.马踏棋盘问题(骑士周游问题)实际上是图的深度优先搜索(DFS)的应用。
        2.如果使用回溯(就是深度优先搜索)来解决,假如马儿踏了53个点，如图:走到了第53个,坐标(1,0)，发现已经走到尽头, 没办法，那就只能回退了，查看其他的路径，就在棋盘上不停的回溯.....，思路分析+代码实现。
        3.先用基本方式来解决，然后使用贪心算法(greedyalgorithm)进行优化。解决马踏棋盘问题,体会到不同的算法对程序效率的影响。
        4.使用前面的游戏来验证算法是否正确。
     */
}
