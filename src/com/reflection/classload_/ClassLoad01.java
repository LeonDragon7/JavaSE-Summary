package com.reflection.classload_;
/*
    类加载
    基本说明
    反射机制是java实现动态语言的关键，也就是通过反射实现类动态加载。
    1.静态加载:编译时加载相关的类，如果没有则报错，依赖性太强。
    2.动态加载:运行时加载需要的类，如果运行时不用该类，即使不存在该类，也不报错，降低了依赖性。(反射)

    类加载时机
    1.当创建对象时(new) //静态加载
    2.当子类被加载时，父类也加载 //静态加载
    3.调用类中的静态成员时 //静态加载
    4.通过反射 //动态加载
    Class.forName("com.test.Cat");

    加载后方法区存储的是类的字节码二进制文件，而堆区就创建了相应的类的Class对象。

    注意：这里是针对类的加载阶段，并不是new的阶段，因此是针对静态成员。
 */
public class ClassLoad01 {

}
